---
title: "Figuras"
format: html
---

```{r setup, include=FALSE}
options(scipen = 9999)

library(ggplot2)

sysfonts::font_add_google(name = "Lato", family = "Lato")
showtext::showtext_auto()
```

# Pirâmide Etária (2000)

```{r piramide-2000, echo = FALSE, warning = FALSE, message = FALSE, fig.width = 10, fig.height = 11, fig.dp = 300}

# load data
url_2000 <- "https://www.populationpyramid.net/api/pp/76/2000/?csv=true"
pop_2000 <- readr::read_csv(url_2000)
# head(pop_2000)

# manipulação dos dados

pop_2000 <- pop_2000 |>
  tidyr::gather("Gender", "Population", 2:3) |>
  dplyr::mutate(
    PopPerc = dplyr::case_when(
      Gender == "M" ~ -round(Population/sum(Population)*100, 2),
      TRUE ~ round(Population/sum(Population)*100, 2)
    ),
    signal = dplyr::case_when(
      Gender == "M" ~ -1,
      TRUE ~ 1
    )
  )

# head(pop_2000)
pop_2000$Age <- factor(pop_2000$Age, levels = unique(pop_2000$Age), ordered = TRUE)
pop_2000$Gender <- factor(pop_2000$Gender, levels = unique(pop_2000$Gender), ordered = TRUE)

# plotting

pop_2000 |>
  ggplot() +
  geom_bar(
    aes(
      x = Age,
      y = PopPerc,
      fill = Gender
    ),
    stat = "identity"
  ) +
  geom_text(
    aes(
      x = Age,
      y = PopPerc+signal*0.4,
      label = abs(PopPerc)
    ),
    size = 6
  ) +
  coord_flip() +
  scale_fill_manual(
    name = "",
    values = c("#e74645", "#005c8b"),
    labels = c("Homens", "Mulheres")
  ) +
  scale_y_continuous(
    breaks = seq(-10, 10, 1),
    labels = function (x) {paste(abs (x), '%')}
  ) +
  labs(
    x = "",
    y = "População (%)",
    # title = "Pirâmide Populacional do Brasil",
    # subtitle = paste(
    #   "População total residente em 2000:",
    #   format(sum(pop_2000$Population), big.mark = ".")
    # ),
    caption = "Fonte: populationpyramid.net"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(vjust = 0.5, size = 15),
    axis.text.y = element_text(size = 15),
    panel.grid.major.y = element_line(color = "lightgray", linetype = "dashed"),
    legend.position = "top",
    legend.justification = "center",
    legend.text = element_text(size = 20),
    plot.caption = element_text(hjust = 0.5, size = 15)
  )
```

# Pirâmide Etária (2060)

```{r piramide-2060, echo = FALSE, warning = FALSE, message = FALSE, fig.width = 10, fig.height = 11, fig.dpi = 300}

# load data
url_2060 <- "https://www.populationpyramid.net/api/pp/76/2060/?csv=true"
pop_2060 <- readr::read_csv(url_2060)
# head(pop_2060)

# manipulação dos dados

pop_2060 <- pop_2060 |>
  tidyr::gather("Gender", "Population", 2:3) |>
  dplyr::mutate(
    PopPerc = dplyr::case_when(
      Gender == "M" ~ -round(Population/sum(Population)*100, 2),
      TRUE ~ round(Population/sum(Population)*100, 2)
    ),
    signal = dplyr::case_when(
      Gender == "M" ~ -1,
      TRUE ~ 1
    )
  )

# head(pop_2060)
pop_2060$Age <- factor(pop_2060$Age, levels = unique(pop_2060$Age), ordered = TRUE)
pop_2060$Gender <- factor(pop_2060$Gender, levels = unique(pop_2060$Gender), ordered = TRUE)

# plotting

pop_2060 |>
  ggplot() +
  geom_bar(
    aes(
      x = Age,
      y = PopPerc,
      fill = Gender
    ),
    stat = "identity"
  ) +
  geom_text(
    aes(
      x = Age,
      y = PopPerc+signal*0.4,
      label = abs(PopPerc)
    ),
    size = 6
  ) +
  coord_flip() +
  scale_fill_manual(
    name = "",
    values = c("#e74645", "#005c8b"),
    labels = c("Homens", "Mulheres")
  ) +
  scale_y_continuous(
    breaks = seq(-10, 10, 1),
    labels = function (x) {paste(abs (x), '%')}
  ) +
  labs(
    x = "",
    y = "População (%)",
    # title = "Pirâmide Populacional do Brasil",
    # subtitle = paste(
    #   "População total residente em 2060:",
    #   format(sum(pop_2060$Population), big.mark = ".")
    # ),
    caption = "Fonte: populationpyramid.net"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(vjust = 0.5, size = 15),
    axis.text.y = element_text(size = 15),
    panel.grid.major.y = element_line(color = "lightgray", linetype = "dashed"),
    legend.position = "top",
    legend.justification = "center",
    legend.text = element_text(size = 20),
    plot.caption = element_text(hjust = 0.5, size = 15)
  )
```

# Razão de Dependência

```{r razao-dependencia-brasil, fig.align = "center", fig.width = 12, fig.height = 7, out.width = "100%", echo = FALSE, message = FALSE, warning = FALSE, fig.dpi = 300}

razao_dependencia <- c("RDT", "RDI", "RDJ")
x2000 <- c((9935100+50266122)/109597948, (9935100/109597948), (50266122/109597948))
x2010 <- c((14081477+45932294)/130742028, (14081477/130742028), (45932294/130742028))
x2020 <- c((20813349+44186100)/146756243, (20813349/146756243), (44186100/146756243))
x2030 <- c((30448865+42625016)/151794581, (30448865/151794581), (42625016/151794581))
x2040 <- c((40368048+38964325)/152587549, (40368048/152587549), (38964325/152587549))
x2050 <- c((50932665+35976487)/146024124, (50932665/146024124), (35976487/146024124))
x2060 <- c((58181930+33597781)/136506636, (58181930/136506636), (33597781/136506636))

razao_dependencia_calculada <- tibble::tibble(razao_dependencia,
                                              x2000,
                                              x2010,
                                              x2020,
                                              x2030,
                                              x2040,
                                              x2050,
                                              x2060) |>
  tidyr::pivot_longer(
    cols = x2000:x2060
  ) |>
  dplyr::mutate(
    year = dplyr::case_when(
      name == "x2000" ~ "2000",
      name == "x2010" ~ "2010",
      name == "x2020" ~ "2020",
      name == "x2030" ~ "2030",
      name == "x2040" ~ "2040",
      name == "x2050" ~ "2050",
      name == "x2060" ~ "2060"
    ),
    razao_dependencia = dplyr::case_when(
      razao_dependencia == "RDT" ~ "RD Total",
      razao_dependencia == "RDI" ~ "RD Idosos",
      razao_dependencia == "RDJ" ~ "RD Jovens"
    )
  )


palette <- c("#005c8b", "#e74645", "#006600")

razao_dependencia_calculada |>
  ggplot() +
  aes(x = as.numeric(year), y = value, group = razao_dependencia) +
  geom_line(aes(color = razao_dependencia), linewidth = 3) +
  annotate(
    "text",
    x = 2020,
    y = 0.52,
    label = "Bônus \nDemográfico",
    size = 7,
    family = "Lato"
  ) +
  scale_y_continuous(
    limits = c(0, 0.70),
    breaks = seq(0, 0.70, 0.10),
    labels = scales::percent
  ) +
  scale_x_continuous(
    limits = c(2000, 2060),
    breaks = seq(2000, 2060, 10)
  ) +
  scale_color_manual(
    values = palette,
    guide = guide_legend(
      title = ""
    )
  ) +
  labs(
    x = "",
    y = "",
    caption = "Fonte: IBGE (2022)"
  ) +
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank(),
    legend.position = "bottom",
    legend.text = element_text(size = 20, lineheight = 2),
    axis.text = element_text(size = 15),
    plot.caption = element_text(hjust = 0.5, size = 15, vjust = -2),
    text = element_text(size = 15, family = "Lato")
  )
```


# Transição Demográfica

```{r transicao-demografica, echo = FALSE, warning = FALSE, message = FALSE, fig.width = 10, fig.height = 6, fig.dpi = 300}

palette_alpha <- c("#b6c5d7", "#b2cba9", "#ffc5bd")

razao_dependencia_tab <- readr::read_csv("dados/razao-dependencia.csv")

razao_dependencia_tab |>
  dplyr::rename(
    "populacao" = "id",
    "x2000" = "n_00",
    "x2010" = "n_10",
    "x2020" = "n_20",
    "x2030" = "n_30",
    "x2040" = "n_40",
    "x2050" = "n_50",
    "x2060" = "n_60"
  ) |>
  tidyr::pivot_longer(
    cols = x2000:x2060
  ) |>
  dplyr::mutate(
    year = dplyr::case_when(
      name == "x2000" ~ "2000",
      name == "x2010" ~ "2010",
      name == "x2020" ~ "2020",
      name == "x2030" ~ "2030",
      name == "x2040" ~ "2040",
      name == "x2050" ~ "2050",
      name == "x2060" ~ "2060"
    ),
    value = (value/1000000),
    # populacao = dplyr::case_when(
    #   populacao == "jovem" ~ "criança",
    #   TRUE ~ populacao
    # )
    populacao = factor(populacao, levels = c("idoso", "adulto", "jovem"))
  ) |>
  ggplot() +
  aes(
    x = year,
    y = value,
    group = populacao
  ) +
  geom_bar(
    aes(
      fill = populacao
    ),
    stat = "identity"
  ) +
  geom_text(
    aes(
      label = round(value, 2)
    ),
    position = position_stack(vjust = 0.5),
    size = 5
  ) +
  scale_y_continuous(
    limits = c(0, 250),
    breaks = seq(0, 250, 50)
  ) +
  scale_fill_manual(
    values = palette_alpha,
    guide = guide_legend(
      title = "",
      size = 20,
      family = "Lato"
    )
  ) +
  labs(
    x = "",
    y = "(em milhões)",
    caption = "Fonte: IBGE (2022)",
    title = "Tamanho da população brasileira por faixa etária",
    subtitle = "em milhões de habitantes"
  ) +
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank(),
    legend.position = "bottom",
    legend.text = element_text(size = 15),
    plot.caption = element_text(hjust = 0.5),
    text = element_text(size = 15, family = "Lato")
  )
```
